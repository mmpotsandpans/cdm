{"version":3,"sources":["models/People.ts","views/People/People.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["People","peopleTypes","fallen","detained","parsedFallen","map","p","status","parsedDetainees","peopleData","concat","PeopleBreakdown","useState","peopleType","setPeopleType","sortBy","setSortBy","filter","setFilter","snackbarOpen","setSnackbarOpen","rows","sort","person","key","toLowerCase","match","className","Breadcrumbs","aria-label","pt","Link","color","href","onClick","toString","target","rel","value","onChange","e","TableContainer","component","Paper","Table","stickyHeader","size","TableHead","TableRow","TableCell","TableSortLabel","active","TableBody","row","i","scope","name","position","age","tstamp","Date","toLocaleDateString","details","Snackbar","open","message","autoHideDuration","onClose","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cc925ec7.chunk.js","sourcesContent":["import parsedDetainees from '../resources/parsedDetainees.json'\n// import parsedOnTheRun from '../resources/parsedOnTheRun.json'\nimport parsedFallen from '../resources/fallen.json'\n\nexport enum People {\n    detained = 'ထိန်းသိမ်း',\n    onTheRun = 'ဝရမ်း',\n    fallen = 'ကျဆုံး',\n    wounded = 'ထိခိုက်'\n  }\n\nexport interface Person {\n  name: string;\n  status: People;\n  tstamp?: number;\n  position?: string;\n  details?: string;\n  age?: number;\n}\n\n// on the run list is unreliable, so it's omitted for now\nexport const peopleTypes = [People.fallen, People.detained]\n\nconst fallen = (parsedFallen as any[]).map(p => ({...p, status: People.fallen}))\nconst detained = (parsedDetainees as any[]).map(p => ({...p, status: People.detained}))\n// const onTheRun = (parsedOnTheRun as any[]).map(p => ({...p, status: People.onTheRun}))\n\nexport const peopleData: Person[] = fallen.concat(detained)","import React, { FC, useState } from 'react';\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Link from '@material-ui/core/Link';\nimport { People, peopleData, peopleTypes, Person } from '../../models/People';\nimport { TableContainer, Paper, Table, TableHead, TableRow, TableCell, TableBody, TableSortLabel, Snackbar } from '@material-ui/core';\nimport sort from 'lodash.sortby'\nimport './People.scss';\n\nexport const PeopleBreakdown: FC<{}> = () => {\n    const [peopleType, setPeopleType] = useState<People>(People.fallen)\n    const [sortBy, setSortBy] = useState<keyof Person>(\"name\");\n    const [filter, setFilter] = useState('')\n    const [snackbarOpen, setSnackbarOpen] = useState(true);\n    const rows = sort(peopleData.filter(person => person.status === peopleType), [sortBy])\n        .filter((person: any) => {\n            for (let key in person) {\n                if (typeof person[key] === 'string' && (person[key]).toLowerCase().match(filter.toLowerCase())) {\n                    return true\n                }\n            }\n            return false\n        })\n  return (\n      <div className='PeopleBreakdown'>\n        <Breadcrumbs aria-label=\"breadcrumb\">\n            {peopleTypes.map(pt => (\n                <Link key={pt} color={pt === peopleType ? 'textPrimary' : 'inherit'} href='#' onClick={() => setPeopleType(pt)}>\n                    {pt.toString()}\n                </Link>\n            ))}\n        </Breadcrumbs>\n        {peopleType === People.detained &&\n         <div className='info'>\n             အသေးစိတ်ကို <a target='_blank' rel='noreferrer' href='https://aappb.org/wp-content/uploads/2021/02/Recent-Arrests-List-Last-Updated-on-19-Feb-21.pdf'>ဒီမှာကြည့်နိုင်ပါသည်။</a>\n         </div>\n        }\n        <div className='search'>\n            <label>ရှာဖွေရန်</label>&nbsp;\n            <input value={filter} onChange={e => setFilter(e.target.value)} />\n        </div>\n        <TableContainer component={Paper}>\n            <Table stickyHeader size=\"small\" aria-label=\"people\">\n            <TableHead>\n                <TableRow>\n                <TableCell></TableCell>\n                <TableCell onClick={() => setSortBy(\"name\")}><TableSortLabel active={sortBy === 'name'}>နာမည်</TableSortLabel></TableCell>\n                <TableCell onClick={() => setSortBy(\"position\")}><TableSortLabel active={sortBy === 'position'}>ရာထူး/နေရပ်</TableSortLabel></TableCell>\n                {peopleType === People.fallen &&\n                    <>\n                        <TableCell onClick={() => setSortBy(\"age\")}><TableSortLabel active={sortBy === 'age'}>အသက်</TableSortLabel></TableCell>\n                        <TableCell onClick={() => setSortBy(\"tstamp\")}><TableSortLabel active={sortBy === 'tstamp'}>ကျဆုံးချိန်</TableSortLabel></TableCell>\n                        <TableCell onClick={() => setSortBy(\"details\")}><TableSortLabel active={sortBy === 'details'}>အသေးစိတ်</TableSortLabel></TableCell>\n                    </>\n                }\n                </TableRow>\n            </TableHead>\n            <TableBody>\n                {rows.map((row, i) => (\n                <TableRow key={row.name}>\n                    <TableCell component=\"th\" scope=\"row\">\n                    {i + 1}\n                    </TableCell>\n                    <TableCell component=\"th\" scope=\"row\" className='sticky-column'>\n                    {row.name}\n                    </TableCell>\n                    <TableCell>{row.position}</TableCell>\n                    {peopleType === People.fallen &&\n                        <>\n                            <TableCell>{row.age}</TableCell>\n                            <TableCell>{row.tstamp ? (new Date(row.tstamp)).toLocaleDateString() : ''}</TableCell>\n                            <TableCell>{row.details}</TableCell>\n                        </>\n                    }\n                </TableRow>\n                ))}\n            </TableBody>\n            </Table>\n        </TableContainer>\n        <Snackbar\n            open={snackbarOpen}\n            message=\"အချက်အလက်များကို အွန်လိုင်း မှရယူကာ ဖေဖော်ဝါရီလ ၂၀ရက်တွင် နောက်ဆုံးပြင်ဆင်ထားပါသည်။ အာဇာနည်များအား ဝမ်းနည်းလှစွာဖြင့် ဂုဏ်ပြုမှတ်တမ်းတင်အပ်ပါသည်။ သတင်းမှားယွင်းမှုရှိပါက အတတ်နိုင်ဆုံး ပြင်ဆင်ပေးသွားပါမယ်။\"\n            autoHideDuration={10000}\n            onClose={() => setSnackbarOpen(false)}\n        ></Snackbar>\n    </div>\n  );\n}\n","import React from 'react';\nimport './App.scss';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport { PeopleBreakdown } from './views/People/People';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <div>\n          {/* <nav>\n            <ul>\n              <li>\n                <Link to=\"/\">Home</Link>\n              </li>\n            </ul>\n          </nav> */}\n\n          <Switch>\n            <Route path=\"/\">\n              <PeopleBreakdown />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}